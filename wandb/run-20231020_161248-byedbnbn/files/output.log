LeNet(
  (conv1): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
  (fc_1): Linear(in_features=256, out_features=120, bias=True)
  (fc_2): Linear(in_features=120, out_features=84, bias=True)
  (fc_3): Linear(in_features=84, out_features=10, bias=True)
)
Loss after 12544 examples: 0.754
Loss after 25344 examples: 0.429
Loss after 38144 examples: 0.291
Accuracy of the model on the 10000 test images: 93.550000%
Loss after 50944 examples: 0.243
Loss after 63584 examples: 0.105
Loss after 76384 examples: 0.135
Accuracy of the model on the 10000 test images: 95.970000%
Loss after 89184 examples: 0.150
Loss after 101984 examples: 0.143
Loss after 114784 examples: 0.240
Accuracy of the model on the 10000 test images: 96.890000%
Loss after 127424 examples: 0.056
Loss after 140224 examples: 0.094
Loss after 153024 examples: 0.171
Accuracy of the model on the 10000 test images: 97.160000%
Loss after 165824 examples: 0.091
Loss after 178624 examples: 0.102
Loss after 191264 examples: 0.094
Accuracy of the model on the 10000 test images: 97.550000%
Loss after 204064 examples: 0.083
Loss after 216864 examples: 0.072
Loss after 229664 examples: 0.073
Accuracy of the model on the 10000 test images: 97.830000%
Loss after 242304 examples: 0.056
Loss after 255104 examples: 0.108
Loss after 267904 examples: 0.102
Accuracy of the model on the 10000 test images: 97.980000%
Loss after 280704 examples: 0.032
Loss after 293504 examples: 0.084
Loss after 306144 examples: 0.043
Accuracy of the model on the 10000 test images: 98.100000%
Loss after 318944 examples: 0.054
Loss after 331744 examples: 0.067
Loss after 344544 examples: 0.058
Accuracy of the model on the 10000 test images: 98.250000%
Loss after 357344 examples: 0.071
Loss after 369984 examples: 0.028
Loss after 382784 examples: 0.032
Accuracy of the model on the 10000 test images: 98.370000%
Loss after 395584 examples: 0.055
Loss after 408384 examples: 0.037
Loss after 421024 examples: 0.050
Accuracy of the model on the 10000 test images: 98.500000%
/Users/felixcohen/pythonProject/lib/python3.9/site-packages/wandb/wandb_torch.py:287: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  return tensor.shape == torch.Size([0]) or (~torch.isfinite(tensor)).all().item()
/Users/felixcohen/pythonProject/lib/python3.9/site-packages/wandb/wandb_torch.py:287: TracerWarning: Converting a tensor to a Python number might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  return tensor.shape == torch.Size([0]) or (~torch.isfinite(tensor)).all().item()
/Users/felixcohen/pythonProject/lib/python3.9/site-packages/wandb/wandb_torch.py:290: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  if not torch.isfinite(tensor).all():
/Users/felixcohen/pythonProject/lib/python3.9/site-packages/wandb/wandb_torch.py:207: TracerWarning: Converting a tensor to a Python number might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  tmin = flat.min().item()
/Users/felixcohen/pythonProject/lib/python3.9/site-packages/wandb/wandb_torch.py:208: TracerWarning: Converting a tensor to a Python number might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  tmax = flat.max().item()
/Users/felixcohen/pythonProject/lib/python3.9/site-packages/wandb/wandb_torch.py:243: TracerWarning: Converting a tensor to a Python list might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  {name: wandb.Histogram(np_histogram=(tensor.tolist(), bins.tolist()))},
Loss after 433824 examples: 0.043
Loss after 446624 examples: 0.020
Loss after 459424 examples: 0.041
Accuracy of the model on the 10000 test images: 98.390000%
Loss after 472224 examples: 0.090
Loss after 484864 examples: 0.007
Loss after 497664 examples: 0.046
Accuracy of the model on the 10000 test images: 98.760000%
Loss after 510464 examples: 0.033
Loss after 523264 examples: 0.022
Loss after 536064 examples: 0.053
Accuracy of the model on the 10000 test images: 98.710000%
Loss after 548704 examples: 0.058
Loss after 561504 examples: 0.058
Loss after 574304 examples: 0.025
Accuracy of the model on the 10000 test images: 98.870000%
Loss after 587104 examples: 0.034
Loss after 599904 examples: 0.042
Loss after 612544 examples: 0.016
Accuracy of the model on the 10000 test images: 98.840000%
Loss after 625344 examples: 0.018
Loss after 638144 examples: 0.011
Loss after 650944 examples: 0.016
Accuracy of the model on the 10000 test images: 98.910000%
Loss after 663584 examples: 0.037
Loss after 676384 examples: 0.078
Loss after 689184 examples: 0.042
Accuracy of the model on the 10000 test images: 98.860000%
Loss after 701984 examples: 0.052
Loss after 714784 examples: 0.020
Loss after 727424 examples: 0.033
Accuracy of the model on the 10000 test images: 99.010000%
Loss after 740224 examples: 0.026
Loss after 753024 examples: 0.025
Loss after 765824 examples: 0.020
Accuracy of the model on the 10000 test images: 98.520000%
Loss after 778624 examples: 0.018
Loss after 791264 examples: 0.017
Loss after 804064 examples: 0.017
Accuracy of the model on the 10000 test images: 98.810000%
Loss after 816864 examples: 0.048
Loss after 829664 examples: 0.011
Loss after 842304 examples: 0.024
Accuracy of the model on the 10000 test images: 98.940000%
Loss after 855104 examples: 0.023
Loss after 867904 examples: 0.006
Loss after 880704 examples: 0.023
Accuracy of the model on the 10000 test images: 98.990000%
Loss after 893504 examples: 0.066